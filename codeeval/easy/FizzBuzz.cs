//-----------------------------------------------------------------------
// <copyright file="FizzBuzz.cs" company="Tyson J. Hayes">
//     Copyright (c), Tyson J. Hayes. All rights reserved.
// </copyright>
// <summary>
// Players generally sit in a circle. The player designated to go first says the number "1",
// and each player thenceforth counts one number in turn. However, any number divisible by 'A'
// e.g. three is replaced by the word fizz and any divisible by 'B' e.g. five by the word buzz.
// Numbers divisible by both become fizz buzz. A player who hesitates or makes a mistake is either eliminated. 
// 
// Write a program that prints out the the pattern generated by such a scenario given the values
// of 'A'/'B' and 'N' which are read from an input text file.
// The input text file contains three space delimited numbers i.e. A, B, N.
// The program should then print out the final series of numbers using 'F' for fizz, 'B' for 'buzz' and 'FB' for fizz buzz.

// INPUT SAMPLE:
// Your program should read an input file (provided on the command line) which contains multiple newline separated lines.
// Each line will contain 3 numbers which are space delimited. The first number is first number to divide by
// ('A' in this example), the second number is the second number to divide by ('B' in this example) and the third
// number is where you should count till ('N' in this example). You may assume that the input file is formatted
// correctly and is the numbers are valid positive integers. E.g.
// 3 5 10
// 2 7 15

// OUTPUT SAMPLE:
// 1 2 F 4 B F 7 8 F B
// 1 F 3 F 5 F B F 9 F 11 F 13 FB 15

// Print out the series 1 through N replacing numbers divisible by 'A' by F, numbers divisible by 'B' by B and
// numbers divisible by both as 'FB'. Since the input file contains multiple sets of values, your output will
// print out one line per set. Ensure that there are no trailing empty spaces on each line you print. E.g.

// Constraints: 
// The number of test cases <= 20 
// "A" is in range [1, 20] 
// "B" is in range [1, 20] 
// "N" is in range [21, 100]
// </summary>
//-----------------------------------------------------------------------

namespace CodeEval.Easy
{
    using System;
    using System.IO;
    using System.Text;

    /// <summary>
    /// The fizz buzz challenge.
    /// </summary>
    public class FizzBuzz
    {
        /// <summary>
        /// The test file to read in to test the code.
        /// </summary>
        private static readonly string TestFile = string.Format("{0}\\Easy\\{1}", Environment.CurrentDirectory, "TestInput.txt");

        /// <summary>
        /// The main.
        /// </summary>
        /// <param name="args">
        /// The args.
        /// </param>
        public static void Main(string[] args)
        {
            #if !DEBUG
            using (StreamReader reader = File.OpenText(args[0]))
            #endif

            #if DEBUG
            using (StreamReader reader = File.OpenText(TestFile))
            #endif
            {
                while (!reader.EndOfStream)
                {
                    string line = reader.ReadLine();
                    if (null == line)
                    {
                        continue;
                    }

                    // do something with line
                    string[] splitLine = line.Split(null);

                    int a = Convert.ToInt32(splitLine[0]);
                    int b = Convert.ToInt32(splitLine[1]);
                    int c = Convert.ToInt32(splitLine[2]);

                    var sb = new StringBuilder();

                    for (var n = 1; n <= c; n++)
                    {
                        if (n % a == 0 && n % b == 0)
                        {
                            sb.Append("FB ");
                        }
                        else if (n % a == 0)
                        {
                            sb.Append("F ");
                        }
                        else if (n % b == 0)
                        {
                            sb.Append("B ");
                        }
                        else
                        {
                            sb.Append(string.Format("{0} ", n));
                        }
                    }

                    Console.WriteLine(sb.ToString().Trim());
                }
#if DEBUG
                Console.ReadLine();
#endif
            }
        }
    }
}
